Archive member included because of file (symbol)

/opt/pic32mx/lib/libm.a(cos32.o)
                              mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              mr32.o (__subdf3)
/opt/pic32mx/lib/libm.a(fp32.o)
                              mr32.o (__subsf3)
/opt/pic32mx/lib/libc.a(exit.o)
                              mr32.o (exit)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (errno)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               mr32.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
tick20ms            0x4               mr32.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
tick40ms            0x4               mr32.o
tick160ms           0x4               mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              mr32.o
tick10ms            0x4               mr32.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x46c8       18120  Application's executable code 
.rodata                 0x9d005ac8           0x60          96  Read-only constant data 
.data                   0x9d005b28          0x1a8         424  Data-initialization template 
.sdata                  0x9d005cd0           0x20          32  Small data-initialization template 
      Total kseg0_program_mem used  :      0x48f0       18672  3.6% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_4               0x9d000280            0x8           8  Interrupt Vector 4 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x34          52  1.3% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x4bd4       19412  3.7% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x1a8         424  Initialized data 
.sdata                  0xa00001a8           0x20          32  Small initialized data 
.sbss                   0xa00001c8           0xdc         220  Small uninitialized data 
.bss                    0xa00002a4          0x3a4         932  Uninitialized data 
.stack                  0xa0000648         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x2648        9800  7.5% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x2648        9800  7.5% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD testev2.o
LOAD mr32.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x8
 *(.vector_4)
 .vector_4      0x000000009d000280        0x8 testev2.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0x46c8
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400      0x46c testev2.o
                0x000000009d001834                peek
                0x000000009d001764                isr_T1
                0x000000009d00185c                pop
                0x000000009d001400                main
                0x000000009d001810                push
 .text          0x000000009d00186c     0x1554 mr32.o
                0x000000009d002384                normalizeAngle
                0x000000009d002738                pid
                0x000000009d001a50                average
                0x000000009d002c28                isr_enc_left
                0x000000009d00186c                setServoPos
                0x000000009d002ce0                isr_enc_right
                0x000000009d001c58                readAnalogSensors
                0x000000009d0021bc                getRobotPos
                0x000000009d001ab0                updateBatteryVoltage
                0x000000009d002db0                __gxx_personality_v0
                0x000000009d0029e0                isr_t2
                0x000000009d002224                led
                0x000000009d0022d0                setSP2
                0x000000009d002280                leds
                0x000000009d001b54                sort
                0x000000009d002580                wait
                0x000000009d0021f8                setRobotPos
                0x000000009d001d88                initPIC32
                0x000000009d001ba0                median
                0x000000009d001910                calcDistance
                0x000000009d002358                readEncoders
                0x000000009d00246c                delay
                0x000000009d002320                setVel2
                0x000000009d0022c4                batteryVoltage
                0x000000009d00230c                setPWM2
                0x000000009d0027f4                updateLocalization
                0x000000009d0025c0                actuateMotors
                0x000000009d0024b8                readLineSensors
                0x000000009d002350                closedLoopControl
                0x000000009d0022a0                obstacleSensor
 .text          0x000000009d002dc0      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d002dc0                cos
                0x000000009d002dc0                dpcos
 .text          0x000000009d002f60      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d002f60                dpsin
                0x000000009d002f60                sin
 .text          0x000000009d0030f8      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d0030f8                reduct
 .text          0x000000009d0032ac      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d003480                exadd
                0x000000009d0033b4                exmul
                0x000000009d0032ac                sigmax
                0x000000009d00361c                exdiv
                0x000000009d00356c                exsub
 .text          0x000000009d003880     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d004930                fabs
                0x000000009d0047f4                __eqdf2
                0x000000009d0047f4                __gtdf2
                0x000000009d003880                dpsub
                0x000000009d004488                __floatsidf
                0x000000009d0047f4                __ltdf2
                0x000000009d0044fc                ultodp
                0x000000009d003cac                dpmul
                0x000000009d0045f0                dptofp
                0x000000009d004770                __fixunsdfsi
                0x000000009d0047f4                dpcmp
                0x000000009d00454c                __extendsfdf2
                0x000000009d003888                __adddf3
                0x000000009d004770                dptoul
                0x000000009d003fd4                dpdiv
                0x000000009d004488                litodp
                0x000000009d0046e8                __fixdfsi
                0x000000009d0047f4                __ledf2
                0x000000009d00454c                fptodp
                0x000000009d004918                __negdf2
                0x000000009d003888                dpadd
                0x000000009d003fd4                __divdf3
                0x000000009d003cac                __muldf3
                0x000000009d0045f0                __truncdfsf2
                0x000000009d0047f4                __nedf2
                0x000000009d0046e8                dptoli
                0x000000009d00494c                nan
                0x000000009d004930                dpfabs
                0x000000009d0047f4                __gedf2
                0x000000009d00494c                dpnan
                0x000000009d003880                __subdf3
 .text          0x000000009d0049a8      0x8ec /opt/pic32mx/lib/libm.a(fp32.o)
                0x000000009d004dd4                __divsf3
                0x000000009d005000                sitofp
                0x000000009d0050a8                __fixsfsi
                0x000000009d004dd4                fpdiv
                0x000000009d0049a8                __subsf3
                0x000000009d0050a8                fptoli
                0x000000009d005194                __lesf2
                0x000000009d005228                fabsf
                0x000000009d005194                __nesf2
                0x000000009d00505c                uitofp
                0x000000009d005194                __gtsf2
                0x000000009d005120                fptoui
                0x000000009d005228                fpfabs
                0x000000009d005000                __floatsisf
                0x000000009d0050a8                fptosi
                0x000000009d005248                fpnan
                0x000000009d005194                __eqsf2
                0x000000009d0049b0                fpadd
                0x000000009d005238                __negsf2
                0x000000009d005194                __ltsf2
                0x000000009d0049a8                fpsub
                0x000000009d005194                fpcmp
                0x000000009d004c1c                __mulsf3
                0x000000009d005194                __gesf2
                0x000000009d005248                nanf
                0x000000009d005000                litofp
                0x000000009d004c1c                fpmul
                0x000000009d005120                __fixunssfsi
                0x000000009d0049b0                __addsf3
                0x000000009d005120                fptoul
                0x000000009d00505c                ultofp
 .text.exit     0x000000009d005294       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d005294                exit
 .text._cleanup
                0x000000009d0052b0       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d0052b0                _cleanup
 .text._exit    0x000000009d005310        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d005310                _exit
 .text.fclose   0x000000009d005318      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d005318                fclose
 .text.fflush   0x000000009d00542c       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d00542c                fflush
 .text._bufallo
                0x000000009d0054f0       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d0054f0                _bufallo
 .text._buffree
                0x000000009d005548       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d005548                _buffree
 .text.getpagesize
                0x000000009d005558        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005558                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d005560       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005560                _stub_sbd_memlayout
                0x000000009d005560                _sbd_memlayout
 .text._sbrk_init
                0x000000009d00558c      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00558c                _sbrk_init
 .text._sbrk    0x000000009d0056e4       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d0056e4                _sbrk
 .text.sbrk     0x000000009d0057a0       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d0057a0                sbrk
 .text.write    0x000000009d005814       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d005814                write
 .text.remove   0x000000009d0058bc        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d0058bc                remove
 .text.close    0x000000009d0058c4        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d0058c4                close
 .text          0x000000009d0058cc       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d0058cc                memset
 .text._mon_putc
                0x000000009d005974       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d005974                _mon_putc
 .text          0x000000009d005a18       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d005a88                printStr
                0x000000009d005a68                printInt
                0x000000009d005a48                readInt
                0x000000009d005ac0                resetCoreTimer
                0x000000009d005a38                putChar
                0x000000009d005a98                readStr
                0x000000009d005aa8                exxt
                0x000000009d005a78                printInt10
                0x000000009d005a18                inkey
                0x000000009d005a28                getChar
                0x000000009d005a58                readInt10
                0x000000009d005ab8                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d005ac8                _text_end = .

.rodata         0x000000009d005ac8       0x60
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x000000009d005ac8       0x10 mr32.o
                0x000000009d005acc                KI_num
                0x000000009d005ad4                KP_num
                0x000000009d005ac8                KI_den
                0x000000009d005ad0                KP_den
 .rodata.cst8   0x000000009d005ad8       0x38 mr32.o
                                         0x40 (size before relaxing)
 .rodata        0x000000009d005b10       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d005b28                . = ALIGN (0x4)
 *fill*         0x000000009d005b25        0x3 00

.sdata2         0x000000009d005b28        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d005b28                . = ALIGN (0x4)

.sbss2          0x000000009d005b28        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d005b28                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x1a8 load address 0x000000009d005b28
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x98 mr32.o
 .data          0x00000000a0000098       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a0000098                sincon
                0x00000000a00000d0                coscon
 .data          0x00000000a0000108       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000108                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d005b28                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a00081a0                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a00001a8       0x20 load address 0x000000009d005cd0
                0x00000000a00001a8                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a00001a8       0x10 testev2.o
                0x00000000a00001a8                reverseSpeed
                0x00000000a00001ac                turningSpeed
                0x00000000a00001b4                speed
                0x00000000a00001b0                adjust
 .sdata         0x00000000a00001b8        0x8 mr32.o
                0x00000000a00001b8                SERVO_WIDTH_MAX
                0x00000000a00001bc                SERVO_WIDTH_MIN
 .sdata         0x00000000a00001c0        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00001c0                _Files
 .sdata         0x00000000a00001c4        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a00001c4                __C32_UART
                0x00000000a00001c8                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a00001c8                . = ALIGN (0x4)
                0x00000000a00001c8                _data_end = .
                0x00000000a00001c8                _bss_begin = .

.sbss           0x00000000a00001c8       0xdc
                0x00000000a00001c8                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a00001c8       0x14 testev2.o
                0x00000000a00001c8                isInverted
                0x00000000a00001cc                sensorTurn
                0x00000000a00001d4                stackSize
                0x00000000a00001d0                isTurning
                0x00000000a00001d8                millis
 *fill*         0x00000000a00001dc        0x4 00
 .sbss          0x00000000a00001e0       0x90 mr32.o
 .sbss          0x00000000a0000270        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a0000274        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a0000278                _minbrk
                0x00000000a0000274                _maxbrk
 *(.scommon)
 .scommon       0x00000000a0000280       0x14 mr32.o
                0x00000000a0000280                tick80ms
                0x00000000a0000284                tick20ms
                0x00000000a0000288                tick40ms
                0x00000000a000028c                tick160ms
                0x00000000a0000290                tick10ms
 .scommon       0x00000000a0000294        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a0000294                _atexitptr
 .scommon       0x00000000a0000298        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000298                _outdone
 *fill*         0x00000000a0000299        0x3 00
 .scommon       0x00000000a000029c        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a000029c                errno
 .scommon       0x00000000a00002a0        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a00002a0                _tfilesptr
                0x00000000a00002a4                _sbss_end = .

.bss            0x00000000a00002a4      0x3a4
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a00002a4       0xc8 testev2.o
                0x00000000a00002a4                stack
 .bss           0x00000000a000036c      0x26c mr32.o
 .bss           0x00000000a00005d8       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a00005f0       0x18 mr32.o
                0x00000000a00005f0                analogSensors
 COMMON         0x00000000a0000608       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000608                _sibuf
                0x00000000a0000628                _sobuf
                0x00000000a0000648                . = ALIGN (0x4)
                0x00000000a0000648                . = ALIGN (0x4)
                0x00000000a0000648                _end = .
                0x00000000a0000648                _bss_end = .

.persist        0x00000000a0000648        0x0
 *(.persist)
                0x00000000a0000648                . = ALIGN (0x4)

.heap           0x00000000a0000648        0x0
                0x00000000a0000648                _heap = .
                0x00000000a0000648                . = (. + _min_heap_size)

.stack          0x00000000a0000648     0x2000
                0x00000000a0000648                _splim = .
                0x00000000a0000648                _SPLIM = .
                0x00000000a0002648                . = (. + _min_stack_size)
 *fill*         0x00000000a0000648     0x2000 00

.ramfunc        0x00000000a0002800        0x0 load address 0x000000009d005cf0
                0x00000000a0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0002800                . = ALIGN (0x4)
                0x00000000a0002800                _ramfunc_end = .
                0x000000009d005cf0                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000002800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0x700
 *(.pdr)
 .pdr           0x0000000000000000       0xc0 testev2.o
 .pdr           0x00000000000000c0      0x420 mr32.o
 .pdr           0x00000000000004e0       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x0000000000000500       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x0000000000000520       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x0000000000000540       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x0000000000000560       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x0000000000000580       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x00000000000005c0       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x0000000000000660       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x0000000000000680       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x00000000000006a0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x00000000000006c0       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x00000000000006e0       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 testev2.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x5be
 *(.comment)
 .comment       0x0000000000000000       0x4d testev2.o
 .comment       0x000000000000004d       0x4d mr32.o
 .comment       0x000000000000009a       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x00000000000000e7       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x0000000000000134       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x0000000000000181       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x00000000000001ce       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x000000000000021b       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x0000000000000268       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x00000000000002b5       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x0000000000000302       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x000000000000034f       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x00000000000003e7       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x0000000000000434       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x0000000000000481       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x00000000000004ce       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x0000000000000524       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x0000000000000571       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x1e0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x0000000000000028       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x0000000000000050       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x0000000000000078       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x00000000000000a0       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x00000000000000c8       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x00000000000000f8       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x0000000000000140       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x0000000000000168       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x0000000000000190       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x00000000000001b8       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x25b
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x000000000000001b       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x0000000000000049       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x0000000000000065       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x00000000000000ae       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x00000000000000cb       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x00000000000000e8       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x0000000000000114       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x0000000000000130       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x0000000000000151       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x00000000000001c5       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x00000000000001e1       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x00000000000001fe       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x000000000000021a       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x000000000000023a       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xdc0
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x000000000000006a      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x00000000000001a9       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x00000000000001f3      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x0000000000000343      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x00000000000004a5       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x0000000000000596      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x00000000000006db       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x000000000000071a      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x0000000000000841      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000ac3       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000b3f       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000be8       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000c86       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000d81       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x861
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x0000000000000060       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x000000000000011d       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x000000000000015e       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x00000000000001df       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x00000000000002ab       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x000000000000032b      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x0000000000000434       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x0000000000000464       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x00000000000004f4      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x0000000000000647       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x00000000000006ba       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x0000000000000739       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x00000000000007a8       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x0000000000000831       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x1800
 *(.debug_line)
 .debug_line    0x0000000000000000      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x000000000000019d      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x0000000000000356       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x00000000000003f4      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x000000000000058a      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000776      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x000000000000095a      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x0000000000000bb2      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x0000000000000d2e      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000000ec6      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x0000000000001289       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000134b      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x00000000000014f5      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x000000000000169e       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001771       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x230
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x000000000000002c       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x000000000000005c       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x000000000000007c       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x00000000000000ac       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x00000000000000d8       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x0000000000000110       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x000000000000019c       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x00000000000001d0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x00000000000001f0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x0000000000000210       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0x9af
 *(.debug_str)
 .debug_str     0x0000000000000000       0xd6 /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x00000000000000d6       0xd4 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x00000000000001aa       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000021e       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x00000000000002a7       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x0000000000000334       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x00000000000003a8       0xbc /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x0000000000000464       0x6c /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x00000000000004d0       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x000000000000053d      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000063e       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x00000000000006c0       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x000000000000079d       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x000000000000085f       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000940       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x14835
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000000bb6     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x00000000000029fd      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x000000000000332c     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x000000000000517a     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000006fe4     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x0000000000008e3d     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000b1f2      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x000000000000bfad     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000ddf4     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x000000000000ef8d      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x000000000000f8bc     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x0000000000011703     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x000000000001354a      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x0000000000013f06      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(testev2.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d005cf0        0x0

.rel.dyn        0x000000009d005cf0        0x0

.debug_ranges   0x000000009d005cf0       0x18
 .debug_ranges  0x000000009d005cf0       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
